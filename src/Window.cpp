#include "Window.h"

#include "Errors.h"
#include "WindowMode.h"
#include "WindowSettings.h"
#include "WindowStyles.h"

#include "Graphics.h"
#include "Events.h"

#include <SFML/Window.hpp>

///////////////////////////////////////////////////////////////////////////////
//Window                                                                     //
///////////////////////////////////////////////////////////////////////////////
Window::Window() {
  mWindowImpl = new Window();
}
///////////////////////////////////////////////////////////////////////////////
Window::Window(const WindowMode& mode, const std::string& title, 
               WindowStyles style = WS_CLOSE, 
               const WindowSettings& settings = WindowSettings()) {
  mWindowImpl = new Window();
  create(mode, title, style, settings);
}
///////////////////////////////////////////////////////////////////////////////
Window::~Window() {
  delete mWindowImpl;
}
///////////////////////////////////////////////////////////////////////////////
void Window::create(const WindowMode& mode, const std::string& title, 
                    WindowStyles style = WS_CLOSE, 
                    const WindowSettings& settings = WindowSettings()) {
  //TODO check settings and stuff for validity
  mWindowImpl->Create(sf::VideoMode(mode.width, mode.height, mode.bpp),
                      title, style,
                      sf::WindowSettings(settings.depthBits,
                                         settings.stencilBits,
                                         settings.antialias));
}
///////////////////////////////////////////////////////////////////////////////
bool Window::isOpened() {
  return mWindowImpl->IsOpened();
}
///////////////////////////////////////////////////////////////////////////////
void Window::close() {

}
///////////////////////////////////////////////////////////////////////////////
int Window::getWidth() {

}
///////////////////////////////////////////////////////////////////////////////
int Window::getHeight() {

}
///////////////////////////////////////////////////////////////////////////////
int Window::getBPP() {

}
///////////////////////////////////////////////////////////////////////////////
std::string Window::getTitle() {

}
///////////////////////////////////////////////////////////////////////////////
WindowSettings& Window::getSettings() {

}
///////////////////////////////////////////////////////////////////////////////
void Window::setSize(int width, int height) {

}
///////////////////////////////////////////////////////////////////////////////
void Window::setPos(int x, int y) {

}
///////////////////////////////////////////////////////////////////////////////
void Window::setCursorPos(unsigned int x, unsigned int y) {

}
///////////////////////////////////////////////////////////////////////////////
void Window::showCursor(bool show) {

}
///////////////////////////////////////////////////////////////////////////////
void Window::setVirtualSync(bool sync) {

}
///////////////////////////////////////////////////////////////////////////////
void Window::setIcon(unsigned int width, unsigned int height,
                     const uint8_t* icon) {

}
///////////////////////////////////////////////////////////////////////////////
Graphics* Window::getGraphics() {

}
///////////////////////////////////////////////////////////////////////////////
Events* Window::getEvents() {

}
///////////////////////////////////////////////////////////////////////////////

